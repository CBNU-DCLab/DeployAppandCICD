<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1316.vd2290d3341a_f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.18-439.v86a_20b_a_8318b_">
      <queuingDurationMillis>31</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>6</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@656.va_a_ceeb_6ffb_f7">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <jenkins.model.InterruptedBuildAction>
      <causes>
        <jenkins.model.CauseOfInterruption_-UserInterruption>
          <user>admin</user>
        </jenkins.model.CauseOfInterruption_-UserInterruption>
      </causes>
    </jenkins.model.InterruptedBuildAction>
  </actions>
  <queueId>67</queueId>
  <timestamp>1688029656939</timestamp>
  <startTime>1688029656944</startTime>
  <result>ABORTED</result>
  <duration>6330</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>ABORTED</result>
    <script>podTemplate(label: &apos;docker-build&apos;, 
  containers: [
    containerTemplate(
      name: &apos;git&apos;,
      image: &apos;alpine/git&apos;,
      command: &apos;cat&apos;,
      ttyEnabled: true
    ),
    containerTemplate(
      name: &apos;docker&apos;,
      image: &apos;docker&apos;,
      command: &apos;cat&apos;,
      ttyEnabled: true
    ),
  ],
  volumes: [ 
    hostPathVolume(mountPath: &apos;/var/run/docker.sock&apos;, hostPath: &apos;/var/run/docker.sock&apos;), 
  ]
) {
    node(&apos;docker-build&apos;) {
        def dockerHubCred = &apos;test&apos;
        def appImage
        
        stage(&apos;Checkout&apos;){
            container(&apos;git&apos;){
                checkout scm
            }
        }
        
        stage(&apos;Build&apos;){
            container(&apos;docker&apos;){
                script {
                    appImage = docker.build(&quot;jeongmin99/newmodule&quot;)
                }
            }
        }
        
       

        stage(&apos;Push&apos;){
            container(&apos;docker&apos;){
                script {
                    docker.withRegistry(&apos;https://registry.hub.docker.com&apos;, dockerHubCred){
                        appImage.push(&quot;${env.BUILD_NUMBER}&quot;)
                        appImage.push(&quot;latest&quot;)
                    }
                }
            }
        }

     stage(&apos;Deploying container to Kubernetes&apos;) {

        script {
          //kubernetesDeploy(configs: &quot;/root/project/newModule/new-deployment.yaml&quot;,&quot;/root/project/newModulenew-service.yaml&quot;)
          sh &apos;kubectl apply -f newModulenew-service.yaml&apos;
          sh &apos;kubectl apply -f new-deployment.yaml&apos;
        
      }
    }
    }
    
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>36977239</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>522601826</long>
      </entry>
      <entry>
        <string>run</string>
        <long>658558162</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>481215048</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>181355322</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>9</iota>
    <head>1:9</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>